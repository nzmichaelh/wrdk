#!/usr/bin/env python
"""Provides an easy way to find out where wrdk is installed"""

# Variables are implemented through functions that are named after the
# specific situation they handle.  The most specific situation (such
# as a stand-alone layout for a samov1) are checked first, all the way
# down to the fallback case.

import sys
import os
import optparse

import wrdk

if sys.platform == 'win32':
    import win32api

join = os.path.join

def path(*args):
    """Generate an absolute path based on a root directory.  Always
    generates a path using the host convention.
    """
    split = [args[0]]

    for arg in args[1:]:
        split.extend(arg.split('/'))

    combined = reduce(join, split)

    abs = os.path.abspath(combined)

    if sys.platform == 'win32':
        # Avoid having to quote everything by converting to a short name
        if os.path.exists(abs):
            abs = win32api.GetShortPathName(abs)

        # Change to the alternate separator. Convers win32 '\' paths to
        # '/' which work a bit better with Makefiles
        abs = abs.replace(os.sep, os.altsep)

    return abs

def intree_share(root, w):
    print path(w, 'wrdk/share'),

def standalone_share(root, w):
    print path(root, 'share')

def main():
    parser = optparse.OptionParser(version=wrdk.__version__,
                                   description='Provides information about how wrdk is installed')
    parser.add_option('--layout', action='store_true')
    parser.add_option('--share', action='store_true')

    opts, args = parser.parse_args()

    if args or len(sys.argv) == 1:
        parser.error('No arguments supplied')

    if 'wrdk-config' in sys.executable:
        root = sys.executable
    else:
        root = sys.argv[0]

    root = join(os.path.dirname(root), '..')

    if os.path.exists(path(root, '../samo-lib')):
        layout = 'intree'
    else:
        layout = 'standalone'

    wikireader = join(root, '..')
    target = 'samov1'

    for arg in sys.argv[1:]:
        if arg == '--layout':
            print layout
        elif arg.startswith('--'):
            type = arg[2:].replace('-', '_')

            for name in ['%s_%s_%s' % (layout, target, type),
                         '%s_%s' % (layout, type),
                         '%s_%s' % (target, type),
                         type]:
                if name in globals():
                    globals()[name](root, wikireader)
                    break
            else:
                assert False, 'Unrecognised argument "%s"' % arg

if __name__ == '__main__':
   main()
